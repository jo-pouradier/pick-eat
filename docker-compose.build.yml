volumes:
  ssd_storage:
    driver: local
    driver_opts:
      type: none
      device: ./uploads
      o: bind

services:
  # The load balancer / reverse proxy
  nginx:
    build:
      context: ./proxy
      dockerfile: ./Dockerfile
    env_file: dev.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${NGINX_PORT_HTTP:-80}:80"
      - "${NGINX_PORT_HTTPS:-443}:443"
    volumes:
      - ssd_storage:${SSD_STORAGE_PATH:-/mnt/ssd_storage}

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    env_file: dev.env
    ports:
      - "${FRONTEND_PORT:-8081}:${FRONTEND_PORT:-8081}"

  active_mq:
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 61616" ]
      interval: 5s
      timeout: 5s
      retries: 5
    build:
      context: ./activemq
      dockerfile: ./Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      ACTIVEMQ_DISALLOW_WEBCONSOLE: ${ACTIVEMQ_DISALLOW_WEBCONSOLE:-false}
      ACTIVEMQ_PASSWORD: ${ACTIVEMQ_PASSWORD:-admin}
      ACTIVEMQ_USERNAME: ${ACTIVEMQ_USERNAME:-admin}
      ACTIVEMQ_WEBADMIN_PASSWORD: ${ACTIVEMQ_WEBADMIN_PASSWORD:-adminweb}
      ACTIVEMQ_WEBADMIN_USERNAME: ${ACTIVEMQ_WEBADMIN_USERNAME:-adminweb}
    ports:
      - "${ACTIVE_MQ_PORT_TCP:-61616}:61616"
      - "${ACTIVE_MQ_PORT_WEB:-8161}:8161"
      - "${ACTIVE_MQ_PORT_STOMP:-61613}:61613"

  auth_database:
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    build:
      context: ./PostgresDatabase
      dockerfile: ./Dockerfile
    environment:
      POSTGRES_USER: ${AUTH_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD:-postgres}
      POSTGRES_DB: ${AUTH_DB_NAME:-postgres}
    ports:
      - "${AUTH_DB_PORT:-5432}:5432"

  auth:
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        - TARGET_SERVICE=auth
    depends_on:
      auth_database:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      POSTGRES_USER: ${AUTH_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD:-postgres}
      POSTGRES_DB: ${AUTH_DB_NAME:-postgres}
    env_file: dev.env
    ports:
      - "${AUTH_PORT:-8082}:${AUTH_PORT:-8082}"

  event:
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        - TARGET_SERVICE=event
    depends_on:
      active_mq:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file: dev.env
    ports:
      - "${EVENT_PORT:-8083}:${EVENT_PORT:-8083}"
    volumes:
      - ssd_storage:${SSD_STORAGE_PATH:-/mnt/ssd_storage}

  restaurant:
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        - TARGET_SERVICE=restaurant
    env_file: dev.env
    ports:
      - "${RESTAURANT_PORT:-8084}:${RESTAURANT_PORT:-8084}"
  billing:
    build:
      context: ./billing
      args:
        - BILLING_PORT=8086
    env_file: dev.env
    ports:
      - "${BILLING_PORT:-8086}:${BILLING_PORT:-8086}"
    depends_on:
      active_mq:
        condition: service_healthy
  socket-spring:
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        - TARGET_SERVICE=socketspring
    environment:
      BROKER_HOST: "active_mq"
      BROKER_PORT: "61616"
      BROKER_USER: "admin"
      BROKER_PASSWORD: "admin"
    depends_on:
      active_mq:
        condition: service_healthy
    env_file: dev.env
    ports:
      - "${SOCKET_SPRING_PORT:-8085}:${SOCKET_SPRING_PORT:-8085}"
