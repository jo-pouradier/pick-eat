server{
    listen 80;
    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Optional: Enable gzip compression for faster loading
    gzip on;
    gzip_types text/css application/javascript application/json application/xml text/plain;
    gzip_min_length 1000;

    # Handle all requests by serving index.html
    location / {
        proxy_pass http://host.docker.internal:${FRONTEND_PORT};
    }

    location /storage/ {
        alias ${SSD_STORAGE_PATH}/;
    }

    # Redirect
    location /auth/ {
        rewrite ^/auth/(.*)$ /$1 break;
        proxy_pass http://host.docker.internal:${AUTH_PORT};
    }

    location /event/ {
        client_max_body_size 10M;
        rewrite ^/event/(.*)$ /$1 break;
        proxy_pass http://host.docker.internal:${EVENT_PORT};
    }

    location /restaurant/ {
        rewrite ^/restaurant/(.*)$ /$1 break;
        proxy_pass http://host.docker.internal:${RESTAURANT_PORT};
    }

    location /ws/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass http://host.docker.internal:${SOCKET_SPRING_PORT};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
}
